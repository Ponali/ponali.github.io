(()=>{
// check fps
if(x==0&&y==0){
	if(window.fpschk){
		window.fpschk.currentFps = 1000/(t - window.fpschk.tStart);
		window.fpschk.tStart=t;
	} else {
		window.fpschk = {"tStart":t,"currentFps":60}
	}
}
let fps = window.fpschk.currentFps;
let delta = 1/window.fpschk.currentFps;
// game
playerx = Math.floor(mx)-50;
sw = sy = 256;
let bricks = [];
try{bricks = window.breakout.bricks;}catch{/*bru*/}
if(x==0&&y==0){
	console.log(window.breakout)
	if(window.breakout){
		window.breakout.dx+=window.breakout.vx*delta*50;
		window.breakout.dy+=window.breakout.vy*delta*50;
		if(window.breakout.dx<=0){window.breakout.vx=Math.abs(window.breakout.vx);window.breakout.dx=0;}
		if(window.breakout.dx>=(sw-10)){window.breakout.vx=0-Math.abs(window.breakout.vx);window.breakout.dx=(sw-12);}
		if(window.breakout.dy<=0){window.breakout.vy=Math.abs(window.breakout.vy);window.breakout.dy=0;}
		if(window.breakout.dy>=(sh-10)||window.breakout.bricks.length==0){window.breakout = null;}
		if(window.breakout.dy>=(220-10)&&window.breakout.dx>=playerx&&window.breakout.dx<=(playerx+100)){window.breakout.vy=0-Math.abs(window.breakout.vy);};
		let bbroken = 0;
		for(i=0;i<bricks.length;i++){
			if(window.breakout.dx>=(bricks[i].x-16)&&window.breakout.dx<=(bricks[i].x+16)){
				if(bbroken==0){
					if(window.breakout.dy>=(bricks[i].y-10)&&window.breakout.dy<=(bricks[i].y+10)){window.breakout.bricks.splice(i,1);window.breakout.vy=0-(window.breakout.vy);i--;bbroken++;};
				} else {
					window.breakout.vx=0-(window.breakout.vx);i=10000;
				}
			}
		}
	} else {
		window.breakout = {"vx":2,"vy":2,"dx":0,"dy":150,"bricks":[]};
		for(i=0;i<16*8;i++){let idx = ((16*8)-i)-1;window.breakout.bricks.push({"x":((idx%16)*16)-1,"y":20+(Math.floor(idx/16)*10),"color":([0xff0000,0xffa000,0x00ff00,0xffff00])[Math.floor((idx)/32)]})}
	}
}
let dx = window.breakout.dx; let dy = window.breakout.dy;
let gamepx = 0xffffff*(x<=(10+dx)&&y<=(10+dy)&&x>dx&&y>dy); // ball
gamepx+=0x0080ff*(x<=(100+playerx)&&y<=(10+220)&&x>playerx&&y>220); // paddle
for(i=0;i<bricks.length;i++){if(bricks[i].color){ // brick loop
	gamepx+=bricks[i].color*(x<=(16+bricks[i].x)&&y<=(10+bricks[i].y)&&x>bricks[i].x&&y>bricks[i].y);
}}
return gamepx;

})();